---
# --------------------------------------------------
# Create a directory for new release
# --------------------------------------------------
- name: 'Create release directory ({{ deploy_helper.new_release_path }})'
  file:
    path: '{{ deploy_helper.new_release_path }}'
    state: directory
    mode: u=rwX,g=rX,o=rX

# --------------------------------------------------
# Download and extract Prometheus files into .../releases/{version} folder
# --------------------------------------------------
- name: Verify prometheus binary presense
  stat:
    path: "{{ deploy_helper.new_release_path }}/prometheus"
  register: prometheus_bin_exists


- name: Add an unfinished file, to allow cleanup on successful finalize
  file:
    path: '{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}'
    state: touch
  when: prometheus_bin_exists.stat.exists == False


- name: Download Prometheus tarbal
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: "{{ prometheus_download_dir }}/prometheus-{{ prometheus_version }}.tar.gz"
  when: prometheus_bin_exists.stat.exists == False


- name: Create a directory to extract files to
  file:
    path: '{{ prometheus_download_dir }}/prometheus-{{ prometheus_version}}'
    state: directory
  when: prometheus_bin_exists.stat.exists == False

- name: Untar the source package
  unarchive:
    src: "{{ prometheus_download_dir }}/prometheus-{{ prometheus_version }}.tar.gz"
    dest: "{{ prometheus_download_dir }}/prometheus-{{ prometheus_version}}"
    creates: "{{ prometheus_download_dir }}/prometheus-{{ prometheus_version }}/prometheus"
    copy: no
    mode: u=rwX,g=rX,o=rX
    extra_opts: [--strip-components=1]
  when: prometheus_bin_exists.stat.exists == False


- name: Move the downloaded files to the releases folder
  shell: "mv {{ prometheus_download_dir }}/prometheus-{{ prometheus_version}}/* {{ deploy_helper.new_release_path }}/"
  when: prometheus_bin_exists.stat.exists == False

# --------------------------------------------------
# Cleanup
# --------------------------------------------------
- name: Clean up the downloaded files
  file: 
    path: '{{ item }}'
    state: absent
  with_items:
    - "{{ prometheus_download_dir }}/prometheus-{{ prometheus_version }}"
    - "{{ prometheus_download_dir }}/prometheus-{{ prometheus_version }}.tar.gz"
  when: prometheus_cleanup_downloads|bool


# --------------------------------------------------
# Cleanup old and unfinished releases
# --------------------------------------------------
- name: Cleanup old releases
  deploy_helper:
    path: "{{ prometheus_base_dir }}"
    release: '{{ deploy_helper.new_release }}'
    state: finalize
    keep_releases: 10
  notify: 
    - restart prometheus
  become: yes
