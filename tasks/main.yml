---
# tasks file for prometheus

- name: check if prometheus exist
  stat:
    path: "{{ prometheus_bin }}"
  register: __check_prometheus_present

- name: check if promtool exist
  stat:
    path: "{{ promtool_bin }}"
  register: __check_promtool_present

- name: check if console exist
  stat:
    path: "{{ prometheus_dir_configuration }}/console"
  register: __check_console_present

- name: check if console_lib exist
  stat:
    path: "{{ prometheus_dir_configuration }}/console_libraries"
  register: __check_console_lib_present

- name: create prometheus user
  user:
    name: "{{ prometheus_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: create prometheus config dir
  file:
    path: "{{ prometheus_dir_conf }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: create prometheus storage dir
  file:
    path: "{{ prometheus_dir_storage }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: create consoles dir
  file:
    path: "{{ prometheus_dir_conf }}/consoles"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: create console_libraries dir
  file:
    path: "{{ prometheus_dir_conf }}/console_libraries"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: download and unzip prometheus if not exist
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
    validate_certs: no
  when: __check_prometheus_present.stat.exists == false or __check_promtool_present.stat.exists == false or __check_console_present.stat.exists == false or __check_console_lib_present.stat.exists == false

- name: move the prometheus to the final destination
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: "{{ prometheus_bin }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
    remote_src: yes
  when: __check_prometheus_present.stat.exists == false

- name: move the promtool to the final destination
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/promtool"
    dest: "{{ promtool_bin }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
    remote_src: yes
  when: __check_promtool_present.stat.exists == false

- name: move the consoles to the final destination
  command: "cp -r /tmp/prometheus-{{ prometheus_version }}.linux-amd64/consoles {{ prometheus_dir_configuration }}"
  when: __check_console_present.stat.exists == false

- name: move the consoles_libraries to the final destination
  command: "cp -r /tmp/prometheus-{{ prometheus_version }}.linux-amd64/console_libraries {{ prometheus_dir_configuration }}"
  when: __check_console_lib_present.stat.exists == false

- name: clean
  file:
    path: /tmp/prometheus-{{ prometheus_version }}.linux-amd64/
    state: absent

- name: prometheus configuration file
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_dir_configuration }}/prometheus.yml"
    mode: 0755
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
  notify: restart_prometheus

- name: install service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0755
  notify: restart_prometheus

- name: start prometheus
  systemd:
    name: prometheus
    state: started
    enabled: yes

- meta: flush_handlers
